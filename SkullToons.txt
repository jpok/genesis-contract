// SPDX-License-Identifier: MIT

pragma solidity ^0.8.4;

/* 
 * 7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
 * 77      777  7777  77  7777  77  77737777  77777777        7777    777777    7777  7776777  777      77
 * 7  7777  77  777  777  7777  77  77777777  77777777777  777777  77  7777  77  777   777777  77  7777  7
 * 7  7777  77  77  7777  7777  77  77777777  77777777777  77777  7777  77  7777  77    77777  77  7777  7
 * 77  7177777  7  77777  7777  77  77777777  77777777777  77777  7777  77  7777  77  77  777  777  777777
 * 7777  77777     77877  7777  77  77777777  77777777777  77777  7777  77  7777  77  777  77  77777  7777
 * 777777  777  77  7777  7777  77  77777777  77777777777  77777  7777  77  7777  77  7777  7  7777577  77
 * 7  7777  77  777  777  7777  77  77777777  77777977777  77777  7777  77  7777  77  77777    77  7777  7
 * 7  7777  77  7777  77   77   77  77777777  77777777777  777777  77  7777  77  777  772777   77  7777  7
 * 77      777  7777  777      777        77        77777  7777777    777777    7777  7777777  777      77
 * 7777777777777777777777777777777777777777777777777777777777777777747777777777777777777777777777777777777
 */

import "@openzeppelin/contracts/security/ReentrancyGuard.sol";
import "@openzeppelin/contracts/interfaces/IERC2981.sol";
import "erc721a/contracts/ERC721A.sol";


contract Skulltoons is ERC721A, ReentrancyGuard {
    using Strings for uint256;

    uint256 public MAX_SUPPLY = 7700;
    uint256 public constant AIRDROP_SUPPLY = 77;
    uint256 public ROYALTY_PERCENT = 7;
    uint256 public constant MAX_PER_WALLET = 3;
    uint256 public constant PRICE_PER_NFT = .145 ether;
    address public constant THEODORU_ADDRESS = 0x9D20e79A853409Ec89aa37116d823dA8066743a8;

    enum ContractState { PAUSED, SKULL_GAME, PRESALE, PUBLIC, REVEALED }
    ContractState public currentState = ContractState.PAUSED;        

    constructor() 
        ERC721A("Skulltoons", "SKULL")        
    {        
    }
    
    function mint(uint256 quantity) external payable nonReentrant {        
        _safeMint(msg.sender, quantity);
    }
}